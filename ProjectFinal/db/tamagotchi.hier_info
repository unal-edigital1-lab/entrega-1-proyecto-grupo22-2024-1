|tamagotchi
clk => clk.IN8
reset => reset.IN8
b2 => b2.IN1
b3 => b3.IN1
b4 => b4.IN1
light_sensor => always2.IN1
sound_sensor => always2.IN1
scl <> mpu6050_interface:mpu6050.scl
sda <> mpu6050_interface:mpu6050.sda
mosi << FSM_pet:pet_display.mosi
sclk << FSM_pet:pet_display.sclk
ce << FSM_pet:pet_display.ce
dc << FSM_pet:pet_display.dc
lcd_rst << FSM_pet:pet_display.lcd_rst
sseg[6] << display_hex:seg_display.sseg
sseg[5] << display_hex:seg_display.sseg
sseg[4] << display_hex:seg_display.sseg
sseg[3] << display_hex:seg_display.sseg
sseg[2] << display_hex:seg_display.sseg
sseg[1] << display_hex:seg_display.sseg
sseg[0] << display_hex:seg_display.sseg
an[0] << display_hex:seg_display.an
an[1] << display_hex:seg_display.an
an[2] << display_hex:seg_display.an
an[3] << display_hex:seg_display.an
an[4] << display_hex:seg_display.an
an[5] << display_hex:seg_display.an
an[6] << display_hex:seg_display.an
an[7] << display_hex:seg_display.an
test_led << test_mode.DB_MAX_OUTPUT_PORT_TYPE
buzzer_out << buzzer:buzzer_inst.buzzer_out


|tamagotchi|mpu6050_interface:mpu6050
clk => clk.IN3
reset_n => reset_n.IN3
sda <> sda
scl <> scl
movement <= movement_detect:detector.movement


|tamagotchi|mpu6050_interface:mpu6050|mpu6050_controller:mpu6050_ctrl
clk => completed~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => load~reg0.CLK
clk => address_internal[0].CLK
clk => address_internal[1].CLK
clk => address_internal[2].CLK
clk => address_internal[3].CLK
clk => write_enable~reg0.CLK
clk => read_enable~reg0.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => sync_reset~reg0.CLK
clk => state~7.DATAIN
reset_n => completed~reg0.ACLR
reset_n => data[0]~reg0.PRESET
reset_n => data[1]~reg0.PRESET
reset_n => data[2]~reg0.PRESET
reset_n => data[3]~reg0.PRESET
reset_n => data[4]~reg0.PRESET
reset_n => data[5]~reg0.PRESET
reset_n => data[6]~reg0.PRESET
reset_n => data[7]~reg0.PRESET
reset_n => load~reg0.ACLR
reset_n => address_internal[0].ACLR
reset_n => address_internal[1].ACLR
reset_n => address_internal[2].ACLR
reset_n => address_internal[3].ACLR
reset_n => write_enable~reg0.ACLR
reset_n => read_enable~reg0.ACLR
reset_n => data_out[0]~reg0.ACLR
reset_n => data_out[1]~reg0.ACLR
reset_n => data_out[2]~reg0.ACLR
reset_n => data_out[3]~reg0.ACLR
reset_n => data_out[4]~reg0.ACLR
reset_n => data_out[5]~reg0.ACLR
reset_n => data_out[6]~reg0.ACLR
reset_n => data_out[7]~reg0.ACLR
reset_n => sync_reset~reg0.ACLR
reset_n => state~9.DATAIN
internal_clk => sync_reset.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => read_enable.OUTPUTSELECT
internal_clk => write_enable.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => load.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => completed.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => write_enable.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => write_enable.OUTPUTSELECT
internal_clk => read_enable.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => write_enable.OUTPUTSELECT
internal_clk => read_enable.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => load.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => load.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => data.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => address_internal.OUTPUTSELECT
internal_clk => write_enable.OUTPUTSELECT
internal_clk => read_enable.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
sync_reset <= sync_reset~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_enable <= read_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable <= write_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => write_enable.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => load.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => load.OUTPUTSELECT
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => write_enable.OUTPUTSELECT
stop => read_enable.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => load.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => load.OUTPUTSELECT
data_valid => load.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => load.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => write_enable.OUTPUTSELECT
data_valid => read_enable.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
address[0] <= address_internal[0].DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address_internal[1].DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address_internal[2].DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address_internal[3].DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load <= load~reg0.DB_MAX_OUTPUT_PORT_TYPE
completed <= completed~reg0.DB_MAX_OUTPUT_PORT_TYPE
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT


|tamagotchi|mpu6050_interface:mpu6050|i2c_master:i2c_master
clk => stop~reg0.CLK
clk => shift[0].CLK
clk => shift[1].CLK
clk => shift[2].CLK
clk => shift[3].CLK
clk => shift[4].CLK
clk => shift[5].CLK
clk => shift[6].CLK
clk => shift[7].CLK
clk => nack_detected.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_valid~reg0.CLK
clk => queued~reg0.CLK
clk => nack~reg0.CLK
clk => sda_out~reg0.CLK
clk => scl_out~reg0.CLK
clk => status[0]~reg0.CLK
clk => status[1]~reg0.CLK
clk => status[2]~reg0.CLK
clk => sda_in_qq.CLK
clk => sda_in_q.CLK
clk => next_state~3.DATAIN
clk => state~20.DATAIN
reset_n => next_state.READ.OUTPUTSELECT
reset_n => next_state.WRITE.OUTPUTSELECT
reset_n => stop~reg0.ACLR
reset_n => shift[0].ACLR
reset_n => shift[1].ACLR
reset_n => shift[2].ACLR
reset_n => shift[3].ACLR
reset_n => shift[4].ACLR
reset_n => shift[5].ACLR
reset_n => shift[6].ACLR
reset_n => shift[7].ACLR
reset_n => nack_detected.ACLR
reset_n => counter[0].ACLR
reset_n => counter[1].ACLR
reset_n => counter[2].ACLR
reset_n => counter[3].ACLR
reset_n => data_out[0]~reg0.ACLR
reset_n => data_out[1]~reg0.ACLR
reset_n => data_out[2]~reg0.ACLR
reset_n => data_out[3]~reg0.ACLR
reset_n => data_out[4]~reg0.ACLR
reset_n => data_out[5]~reg0.ACLR
reset_n => data_out[6]~reg0.ACLR
reset_n => data_out[7]~reg0.ACLR
reset_n => data_valid~reg0.ACLR
reset_n => queued~reg0.ACLR
reset_n => nack~reg0.ACLR
reset_n => sda_out~reg0.PRESET
reset_n => scl_out~reg0.PRESET
reset_n => status[0]~reg0.ACLR
reset_n => status[1]~reg0.ACLR
reset_n => status[2]~reg0.ACLR
reset_n => sda_in_qq.PRESET
reset_n => sda_in_q.PRESET
reset_n => state~22.DATAIN
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => next_state.OUTPUTSELECT
sync_reset => next_state.OUTPUTSELECT
sync_reset => status[2]~reg0.ENA
sync_reset => status[1]~reg0.ENA
sync_reset => status[0]~reg0.ENA
sync_reset => scl_out~reg0.ENA
sync_reset => sda_out~reg0.ENA
sync_reset => nack~reg0.ENA
sync_reset => queued~reg0.ENA
sync_reset => data_valid~reg0.ENA
sync_reset => data_out[7]~reg0.ENA
sync_reset => data_out[6]~reg0.ENA
sync_reset => data_out[5]~reg0.ENA
sync_reset => data_out[4]~reg0.ENA
sync_reset => data_out[3]~reg0.ENA
sync_reset => data_out[2]~reg0.ENA
sync_reset => data_out[1]~reg0.ENA
sync_reset => data_out[0]~reg0.ENA
sync_reset => counter[3].ENA
sync_reset => counter[2].ENA
sync_reset => counter[1].ENA
sync_reset => counter[0].ENA
sync_reset => nack_detected.ENA
sync_reset => shift[7].ENA
sync_reset => shift[6].ENA
sync_reset => shift[5].ENA
sync_reset => shift[4].ENA
sync_reset => shift[3].ENA
sync_reset => shift[2].ENA
sync_reset => shift[1].ENA
sync_reset => shift[0].ENA
sync_reset => stop~reg0.ENA
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => next_state.OUTPUTSELECT
internal_clk => next_state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => scl_out.OUTPUTSELECT
internal_clk => sda_out.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => counter.OUTPUTSELECT
internal_clk => nack.OUTPUTSELECT
internal_clk => queued.OUTPUTSELECT
internal_clk => stop.OUTPUTSELECT
internal_clk => data_valid.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => scl_out.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => sda_out.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => nack_detected.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => nack_detected.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => sda_out.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => status.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => shift.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => sda_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_out.OUTPUTSELECT
internal_clk => data_valid.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => stop.OUTPUTSELECT
internal_clk => state.OUTPUTSELECT
internal_clk => Selector3.IN1
data_in[0] => shift.DATAB
data_in[1] => shift.DATAB
data_in[2] => shift.DATAB
data_in[3] => shift.DATAB
data_in[4] => shift.DATAB
data_in[5] => shift.DATAB
data_in[6] => shift.DATAB
data_in[7] => shift.DATAB
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_enable => always2.IN0
read_enable => sda_out.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => queued.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => scl_out.OUTPUTSELECT
read_enable => sda_out.OUTPUTSELECT
read_enable => sda_out.DATAB
write_enable => always2.IN1
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => queued.OUTPUTSELECT
write_enable => data_valid.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => scl_out.OUTPUTSELECT
write_enable => sda_out.OUTPUTSELECT
write_enable => sda_out.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => next_state.DATAB
write_enable => next_state.DATAB
write_enable => shift.DATAB
nack <= nack~reg0.DB_MAX_OUTPUT_PORT_TYPE
queued <= queued~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop <= stop~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[0] <= status[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[1] <= status[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[2] <= status[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl_in => ~NO_FANOUT~
scl_out <= scl_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda_in => sda_in_q.DATAIN
sda_out <= sda_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|mpu6050_interface:mpu6050|movement_detect:detector
clk => rescan~reg0.CLK
clk => movement~reg0.CLK
reset_n => rescan~reg0.ACLR
reset_n => movement~reg0.PRESET
internal_clk => rescan~reg0.ENA
internal_clk => movement~reg0.ENA
completed => movement.OUTPUTSELECT
completed => rescan~reg0.DATAIN
rescan <= rescan~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_reg[0] => x_magnitude[0].DATAA
x_reg[0] => Add0.IN15
x_reg[1] => x_magnitude[1].DATAA
x_reg[1] => Add0.IN14
x_reg[2] => x_magnitude[2].DATAA
x_reg[2] => Add0.IN13
x_reg[3] => x_magnitude[3].DATAA
x_reg[3] => Add0.IN12
x_reg[4] => x_magnitude[4].DATAA
x_reg[4] => Add0.IN11
x_reg[5] => x_magnitude[5].DATAA
x_reg[5] => Add0.IN10
x_reg[6] => x_magnitude[6].DATAA
x_reg[6] => Add0.IN9
x_reg[7] => x_magnitude[7].OUTPUTSELECT
x_reg[7] => x_magnitude[6].OUTPUTSELECT
x_reg[7] => x_magnitude[5].OUTPUTSELECT
x_reg[7] => x_magnitude[4].OUTPUTSELECT
x_reg[7] => x_magnitude[3].OUTPUTSELECT
x_reg[7] => x_magnitude[2].OUTPUTSELECT
x_reg[7] => x_magnitude[1].OUTPUTSELECT
x_reg[7] => x_magnitude[0].OUTPUTSELECT
x_reg[7] => movement.DATAB
x_reg[7] => Add0.IN16
movement <= movement~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|debounce:b2_debounce
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => boton_out.OUTPUTSELECT
clk => boton_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => boton_out.DATAB
boton_out <= boton_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|debounce:b3_debounce
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => boton_out.OUTPUTSELECT
clk => boton_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => boton_out.DATAB
boton_out <= boton_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|debounce:b4_debounce
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => boton_out.OUTPUTSELECT
clk => boton_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => boton_out.DATAB
boton_out <= boton_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|debounce:movement_debounce
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => boton_out.OUTPUTSELECT
clk => boton_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => always0.IN1
boton_in => boton_out.DATAB
boton_out <= boton_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|FSM_pet:pet_display
clk => clk.IN1
reset => _.IN1
reset => start.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => cmdindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => dataindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => initindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => iconindex.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => cmd.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => data_in.OUTPUTSELECT
reset => iconline[3][6].ENA
reset => iconline[3][5].ENA
reset => iconline[3][4].ENA
reset => iconline[3][3].ENA
reset => iconline[3][2].ENA
reset => iconline[3][1].ENA
reset => iconline[3][0].ENA
reset => iconline[4][7].ENA
reset => iconline[4][6].ENA
reset => iconline[4][5].ENA
reset => iconline[4][4].ENA
reset => iconline[4][3].ENA
reset => iconline[4][2].ENA
reset => iconline[4][1].ENA
reset => iconline[4][0].ENA
reset => iconline[5][7].ENA
reset => iconline[5][6].ENA
reset => iconline[5][5].ENA
reset => iconline[5][4].ENA
reset => iconline[5][3].ENA
reset => iconline[5][2].ENA
reset => iconline[5][1].ENA
reset => iconline[5][0].ENA
reset => iconline[6][7].ENA
reset => iconline[6][6].ENA
reset => iconline[6][5].ENA
reset => iconline[6][4].ENA
reset => iconline[6][3].ENA
reset => iconline[6][2].ENA
reset => iconline[6][1].ENA
reset => iconline[6][0].ENA
reset => iconline[7][7].ENA
reset => iconline[7][6].ENA
reset => iconline[7][5].ENA
reset => iconline[7][4].ENA
reset => iconline[7][3].ENA
reset => iconline[7][2].ENA
reset => iconline[7][1].ENA
reset => iconline[7][0].ENA
reset => iconline[3][7].ENA
reset => iconline[2][0].ENA
reset => iconline[2][1].ENA
reset => iconline[2][2].ENA
reset => iconline[2][3].ENA
reset => iconline[2][4].ENA
reset => iconline[2][5].ENA
reset => iconline[2][6].ENA
reset => iconline[2][7].ENA
reset => iconline[1][0].ENA
reset => iconline[1][1].ENA
reset => iconline[1][2].ENA
reset => iconline[1][3].ENA
reset => iconline[1][4].ENA
reset => iconline[1][5].ENA
reset => iconline[1][6].ENA
reset => iconline[1][7].ENA
reset => iconline[0][0].ENA
reset => iconline[0][1].ENA
reset => iconline[0][2].ENA
reset => iconline[0][3].ENA
reset => iconline[0][4].ENA
reset => iconline[0][5].ENA
reset => iconline[0][6].ENA
reset => iconline[0][7].ENA
reset => dataline[15][0].ENA
reset => dataline[15][1].ENA
reset => dataline[15][2].ENA
reset => dataline[15][3].ENA
reset => dataline[15][4].ENA
reset => dataline[15][5].ENA
reset => dataline[15][6].ENA
reset => dataline[15][7].ENA
reset => dataline[14][0].ENA
reset => dataline[14][1].ENA
reset => dataline[14][2].ENA
reset => dataline[14][3].ENA
reset => dataline[14][4].ENA
reset => dataline[14][5].ENA
reset => dataline[14][6].ENA
reset => dataline[14][7].ENA
reset => dataline[13][0].ENA
reset => dataline[13][1].ENA
reset => dataline[13][2].ENA
reset => dataline[13][3].ENA
reset => dataline[13][4].ENA
reset => dataline[13][5].ENA
reset => dataline[13][6].ENA
reset => dataline[13][7].ENA
reset => dataline[12][0].ENA
reset => dataline[12][1].ENA
reset => dataline[12][2].ENA
reset => dataline[12][3].ENA
reset => dataline[12][4].ENA
reset => dataline[12][5].ENA
reset => dataline[12][6].ENA
reset => dataline[12][7].ENA
reset => dataline[11][0].ENA
reset => dataline[11][1].ENA
reset => dataline[11][2].ENA
reset => dataline[11][3].ENA
reset => dataline[11][4].ENA
reset => dataline[11][5].ENA
reset => dataline[11][6].ENA
reset => dataline[11][7].ENA
reset => dataline[10][0].ENA
reset => dataline[10][1].ENA
reset => dataline[10][2].ENA
reset => dataline[10][3].ENA
reset => dataline[10][4].ENA
reset => dataline[10][5].ENA
reset => dataline[10][6].ENA
reset => dataline[10][7].ENA
reset => dataline[9][0].ENA
reset => dataline[9][1].ENA
reset => dataline[9][2].ENA
reset => dataline[9][3].ENA
reset => dataline[9][4].ENA
reset => dataline[9][5].ENA
reset => dataline[9][6].ENA
reset => dataline[9][7].ENA
reset => dataline[8][0].ENA
reset => dataline[8][1].ENA
reset => dataline[8][2].ENA
reset => dataline[8][3].ENA
reset => dataline[8][4].ENA
reset => dataline[8][5].ENA
reset => dataline[8][6].ENA
reset => dataline[8][7].ENA
reset => dataline[7][0].ENA
reset => dataline[7][1].ENA
reset => dataline[7][2].ENA
reset => dataline[7][3].ENA
reset => dataline[7][4].ENA
reset => dataline[7][5].ENA
reset => dataline[7][6].ENA
reset => dataline[7][7].ENA
reset => dataline[6][0].ENA
reset => dataline[6][1].ENA
reset => dataline[6][2].ENA
reset => dataline[6][3].ENA
reset => dataline[6][4].ENA
reset => dataline[6][5].ENA
reset => dataline[6][6].ENA
reset => dataline[6][7].ENA
reset => dataline[5][0].ENA
reset => dataline[5][1].ENA
reset => dataline[5][2].ENA
reset => dataline[5][3].ENA
reset => dataline[5][4].ENA
reset => dataline[5][5].ENA
reset => dataline[5][6].ENA
reset => dataline[5][7].ENA
reset => dataline[4][0].ENA
reset => dataline[4][1].ENA
reset => dataline[4][2].ENA
reset => dataline[4][3].ENA
reset => dataline[4][4].ENA
reset => dataline[4][5].ENA
reset => dataline[4][6].ENA
reset => dataline[4][7].ENA
reset => dataline[3][0].ENA
reset => dataline[3][1].ENA
reset => dataline[3][2].ENA
reset => dataline[3][3].ENA
reset => dataline[3][4].ENA
reset => dataline[3][5].ENA
reset => dataline[3][6].ENA
reset => dataline[3][7].ENA
reset => dataline[2][0].ENA
reset => dataline[2][1].ENA
reset => dataline[2][2].ENA
reset => dataline[2][3].ENA
reset => dataline[2][4].ENA
reset => dataline[2][5].ENA
reset => dataline[2][6].ENA
reset => dataline[2][7].ENA
reset => dataline[1][0].ENA
reset => dataline[1][1].ENA
reset => dataline[1][2].ENA
reset => dataline[1][3].ENA
reset => dataline[1][4].ENA
reset => dataline[1][5].ENA
reset => dataline[1][6].ENA
reset => dataline[1][7].ENA
reset => dataline[0][0].ENA
reset => dataline[0][1].ENA
reset => dataline[0][2].ENA
reset => dataline[0][3].ENA
reset => dataline[0][4].ENA
reset => dataline[0][5].ENA
reset => dataline[0][6].ENA
reset => dataline[0][7].ENA
reset => line[0].ENA
reset => line[1].ENA
reset => line[2].ENA
reset => line[3].ENA
reset => line[4].ENA
reset => line[5].ENA
reset => line[6].ENA
reset => line[7].ENA
reset => line[8].ENA
reset => cmdline[5][0].ENA
reset => cmdline[5][1].ENA
reset => cmdline[5][2].ENA
reset => cmdline[5][3].ENA
reset => cmdline[5][4].ENA
reset => cmdline[5][5].ENA
reset => cmdline[5][6].ENA
reset => cmdline[5][7].ENA
reset => cmdline[4][0].ENA
reset => cmdline[4][1].ENA
reset => cmdline[4][2].ENA
reset => cmdline[4][3].ENA
reset => cmdline[4][4].ENA
reset => cmdline[4][5].ENA
reset => cmdline[4][6].ENA
reset => cmdline[4][7].ENA
reset => cmdline[3][0].ENA
reset => cmdline[3][1].ENA
reset => cmdline[3][2].ENA
reset => cmdline[3][3].ENA
reset => cmdline[3][4].ENA
reset => cmdline[3][5].ENA
reset => cmdline[3][6].ENA
reset => cmdline[3][7].ENA
reset => cmdline[2][0].ENA
reset => cmdline[2][1].ENA
reset => cmdline[2][2].ENA
reset => cmdline[2][3].ENA
reset => cmdline[2][4].ENA
reset => cmdline[2][5].ENA
reset => cmdline[2][6].ENA
reset => cmdline[2][7].ENA
reset => cmdline[1][0].ENA
reset => cmdline[1][1].ENA
reset => cmdline[1][2].ENA
reset => cmdline[1][3].ENA
reset => cmdline[1][4].ENA
reset => cmdline[1][5].ENA
reset => cmdline[1][6].ENA
reset => cmdline[1][7].ENA
reset => cmdline[0][0].ENA
reset => cmdline[0][1].ENA
reset => cmdline[0][2].ENA
reset => cmdline[0][3].ENA
reset => cmdline[0][4].ENA
reset => cmdline[0][5].ENA
reset => cmdline[0][6].ENA
reset => cmdline[0][7].ENA
reset => initline[4][0].ENA
reset => initline[4][1].ENA
reset => initline[4][2].ENA
reset => initline[4][3].ENA
reset => initline[4][4].ENA
reset => initline[4][5].ENA
reset => initline[4][6].ENA
reset => initline[4][7].ENA
reset => initline[3][0].ENA
reset => initline[3][1].ENA
reset => initline[3][2].ENA
reset => initline[3][3].ENA
reset => initline[3][4].ENA
reset => initline[3][5].ENA
reset => initline[3][6].ENA
reset => initline[3][7].ENA
reset => initline[2][0].ENA
reset => initline[2][1].ENA
reset => initline[2][2].ENA
reset => initline[2][3].ENA
reset => initline[2][4].ENA
reset => initline[2][5].ENA
reset => initline[2][6].ENA
reset => initline[2][7].ENA
reset => initline[1][0].ENA
reset => initline[1][1].ENA
reset => initline[1][2].ENA
reset => initline[1][3].ENA
reset => initline[1][4].ENA
reset => initline[1][5].ENA
reset => initline[1][6].ENA
reset => initline[1][7].ENA
reset => initline[0][0].ENA
reset => initline[0][1].ENA
reset => initline[0][2].ENA
reset => initline[0][3].ENA
reset => initline[0][4].ENA
reset => initline[0][5].ENA
reset => initline[0][6].ENA
reset => initline[0][7].ENA
face[0] => Mux8.IN8
face[0] => Mux9.IN8
face[0] => Mux10.IN8
face[0] => Mux11.IN8
face[0] => Mux12.IN8
face[0] => Mux13.IN8
face[0] => Mux14.IN8
face[0] => Mux15.IN8
face[0] => Mux16.IN8
face[0] => Mux17.IN8
face[0] => Mux18.IN8
face[0] => Mux19.IN8
face[0] => Mux20.IN8
face[0] => Mux21.IN8
face[0] => Mux22.IN8
face[0] => Mux23.IN8
face[0] => Mux24.IN8
face[0] => Mux25.IN8
face[0] => Mux26.IN8
face[0] => Mux27.IN8
face[0] => Mux28.IN8
face[0] => Mux29.IN8
face[0] => Mux30.IN8
face[0] => Mux31.IN8
face[0] => Mux32.IN8
face[0] => Mux33.IN8
face[0] => Mux34.IN8
face[0] => Mux35.IN8
face[0] => Mux36.IN8
face[0] => Mux37.IN8
face[0] => Mux38.IN8
face[0] => Mux39.IN8
face[0] => Mux41.IN8
face[0] => Mux42.IN8
face[0] => Mux43.IN8
face[0] => Mux44.IN8
face[0] => Mux45.IN8
face[0] => Mux46.IN8
face[0] => Mux47.IN8
face[0] => Mux48.IN8
face[0] => Mux49.IN8
face[0] => Mux50.IN8
face[0] => Mux51.IN8
face[0] => Mux52.IN8
face[0] => Mux53.IN8
face[0] => Mux54.IN8
face[0] => Mux55.IN8
face[0] => Mux56.IN8
face[0] => Mux57.IN8
face[0] => Mux58.IN8
face[0] => Mux59.IN8
face[0] => Mux60.IN8
face[0] => Mux61.IN8
face[0] => Mux62.IN8
face[0] => Mux63.IN8
face[0] => Mux64.IN8
face[0] => Mux65.IN8
face[1] => Mux8.IN7
face[1] => Mux9.IN7
face[1] => Mux10.IN7
face[1] => Mux11.IN7
face[1] => Mux12.IN7
face[1] => Mux13.IN7
face[1] => Mux14.IN7
face[1] => Mux15.IN7
face[1] => Mux16.IN7
face[1] => Mux17.IN7
face[1] => Mux18.IN7
face[1] => Mux19.IN7
face[1] => Mux20.IN7
face[1] => Mux21.IN7
face[1] => Mux22.IN7
face[1] => Mux23.IN7
face[1] => Mux24.IN7
face[1] => Mux25.IN7
face[1] => Mux26.IN7
face[1] => Mux27.IN7
face[1] => Mux28.IN7
face[1] => Mux29.IN7
face[1] => Mux30.IN7
face[1] => Mux31.IN7
face[1] => Mux32.IN7
face[1] => Mux33.IN7
face[1] => Mux34.IN7
face[1] => Mux35.IN7
face[1] => Mux36.IN7
face[1] => Mux37.IN7
face[1] => Mux38.IN7
face[1] => Mux39.IN7
face[1] => Mux40.IN4
face[1] => Mux41.IN7
face[1] => Mux42.IN7
face[1] => Mux43.IN7
face[1] => Mux44.IN7
face[1] => Mux45.IN7
face[1] => Mux46.IN7
face[1] => Mux47.IN7
face[1] => Mux48.IN7
face[1] => Mux49.IN7
face[1] => Mux50.IN7
face[1] => Mux51.IN7
face[1] => Mux52.IN7
face[1] => Mux53.IN7
face[1] => Mux54.IN7
face[1] => Mux55.IN7
face[1] => Mux56.IN7
face[1] => Mux57.IN7
face[1] => Mux58.IN7
face[1] => Mux59.IN7
face[1] => Mux60.IN7
face[1] => Mux61.IN7
face[1] => Mux62.IN7
face[1] => Mux63.IN7
face[1] => Decoder0.IN1
face[1] => Mux64.IN7
face[1] => Mux65.IN7
face[2] => Mux8.IN6
face[2] => Mux9.IN6
face[2] => Mux10.IN6
face[2] => Mux11.IN6
face[2] => Mux12.IN6
face[2] => Mux13.IN6
face[2] => Mux14.IN6
face[2] => Mux15.IN6
face[2] => Mux16.IN6
face[2] => Mux17.IN6
face[2] => Mux18.IN6
face[2] => Mux19.IN6
face[2] => Mux20.IN6
face[2] => Mux21.IN6
face[2] => Mux22.IN6
face[2] => Mux23.IN6
face[2] => Mux24.IN6
face[2] => Mux25.IN6
face[2] => Mux26.IN6
face[2] => Mux27.IN6
face[2] => Mux28.IN6
face[2] => Mux29.IN6
face[2] => Mux30.IN6
face[2] => Mux31.IN6
face[2] => Mux32.IN6
face[2] => Mux33.IN6
face[2] => Mux34.IN6
face[2] => Mux35.IN6
face[2] => Mux36.IN6
face[2] => Mux37.IN6
face[2] => Mux38.IN6
face[2] => Mux39.IN6
face[2] => Mux40.IN3
face[2] => Mux41.IN6
face[2] => Mux42.IN6
face[2] => Mux43.IN6
face[2] => Mux44.IN6
face[2] => Mux45.IN6
face[2] => Mux46.IN6
face[2] => Mux47.IN6
face[2] => Mux48.IN6
face[2] => Mux49.IN6
face[2] => Mux50.IN6
face[2] => Mux51.IN6
face[2] => Mux52.IN6
face[2] => Mux53.IN6
face[2] => Mux54.IN6
face[2] => Mux55.IN6
face[2] => Mux56.IN6
face[2] => Mux57.IN6
face[2] => Mux58.IN6
face[2] => Mux59.IN6
face[2] => Mux60.IN6
face[2] => Mux61.IN6
face[2] => Mux62.IN6
face[2] => Mux63.IN6
face[2] => Decoder0.IN0
face[2] => Mux64.IN6
face[2] => Mux65.IN6
icon[0] => Mux66.IN8
icon[0] => Mux67.IN8
icon[0] => Mux68.IN8
icon[0] => Mux69.IN8
icon[0] => Mux70.IN8
icon[0] => Mux71.IN8
icon[0] => Mux72.IN8
icon[0] => Mux73.IN8
icon[0] => Mux75.IN8
icon[0] => Mux76.IN8
icon[0] => Mux78.IN8
icon[0] => Mux79.IN8
icon[0] => Mux80.IN8
icon[0] => Mux81.IN8
icon[0] => Mux82.IN8
icon[0] => Mux83.IN8
icon[0] => Mux84.IN8
icon[0] => Mux85.IN8
icon[0] => Mux86.IN8
icon[0] => Mux87.IN8
icon[0] => Mux88.IN8
icon[0] => Mux89.IN8
icon[0] => Mux90.IN8
icon[0] => Mux91.IN8
icon[0] => Mux92.IN8
icon[0] => Mux93.IN8
icon[0] => Mux94.IN8
icon[0] => Mux95.IN8
icon[0] => Mux96.IN8
icon[0] => Mux97.IN8
icon[0] => Mux98.IN8
icon[0] => Mux99.IN8
icon[0] => Mux100.IN8
icon[0] => Mux101.IN8
icon[0] => Mux102.IN8
icon[0] => Mux103.IN8
icon[0] => Mux104.IN8
icon[0] => Mux105.IN8
icon[0] => Mux106.IN8
icon[0] => Mux107.IN8
icon[0] => Mux108.IN8
icon[0] => Mux110.IN8
icon[0] => Mux111.IN8
icon[0] => Mux112.IN8
icon[0] => Mux113.IN8
icon[0] => Mux114.IN8
icon[0] => Mux115.IN8
icon[0] => Mux116.IN8
icon[0] => Mux117.IN8
icon[0] => Mux118.IN8
icon[0] => Mux119.IN8
icon[0] => Mux120.IN8
icon[0] => Mux121.IN8
icon[1] => Mux66.IN7
icon[1] => Mux67.IN7
icon[1] => Mux68.IN7
icon[1] => Mux69.IN7
icon[1] => Mux70.IN7
icon[1] => Mux71.IN7
icon[1] => Mux72.IN7
icon[1] => Mux73.IN7
icon[1] => Mux74.IN4
icon[1] => Mux75.IN7
icon[1] => Mux76.IN7
icon[1] => Mux77.IN4
icon[1] => Mux78.IN7
icon[1] => Mux79.IN7
icon[1] => Mux80.IN7
icon[1] => Mux81.IN7
icon[1] => Mux82.IN7
icon[1] => Mux83.IN7
icon[1] => Mux84.IN7
icon[1] => Mux85.IN7
icon[1] => Mux86.IN7
icon[1] => Mux87.IN7
icon[1] => Decoder1.IN1
icon[1] => Mux88.IN7
icon[1] => Mux89.IN7
icon[1] => Mux90.IN7
icon[1] => Mux91.IN7
icon[1] => Mux92.IN7
icon[1] => Mux93.IN7
icon[1] => Mux94.IN7
icon[1] => Mux95.IN7
icon[1] => Mux96.IN7
icon[1] => Mux97.IN7
icon[1] => Mux98.IN7
icon[1] => Mux99.IN7
icon[1] => Mux100.IN7
icon[1] => Mux101.IN7
icon[1] => Mux102.IN7
icon[1] => Mux103.IN7
icon[1] => Mux104.IN7
icon[1] => Mux105.IN7
icon[1] => Mux106.IN7
icon[1] => Mux107.IN7
icon[1] => Mux108.IN7
icon[1] => Mux109.IN4
icon[1] => Mux110.IN7
icon[1] => Mux111.IN7
icon[1] => Mux112.IN7
icon[1] => Mux113.IN7
icon[1] => Mux114.IN7
icon[1] => Mux115.IN7
icon[1] => Mux116.IN7
icon[1] => Mux117.IN7
icon[1] => Mux118.IN7
icon[1] => Mux119.IN7
icon[1] => Mux120.IN7
icon[1] => Mux121.IN7
icon[2] => Mux66.IN6
icon[2] => Mux67.IN6
icon[2] => Mux68.IN6
icon[2] => Mux69.IN6
icon[2] => Mux70.IN6
icon[2] => Mux71.IN6
icon[2] => Mux72.IN6
icon[2] => Mux73.IN6
icon[2] => Mux74.IN3
icon[2] => Mux75.IN6
icon[2] => Mux76.IN6
icon[2] => Mux77.IN3
icon[2] => Mux78.IN6
icon[2] => Mux79.IN6
icon[2] => Mux80.IN6
icon[2] => Mux81.IN6
icon[2] => Mux82.IN6
icon[2] => Mux83.IN6
icon[2] => Mux84.IN6
icon[2] => Mux85.IN6
icon[2] => Mux86.IN6
icon[2] => Mux87.IN6
icon[2] => Decoder1.IN0
icon[2] => Mux88.IN6
icon[2] => Mux89.IN6
icon[2] => Mux90.IN6
icon[2] => Mux91.IN6
icon[2] => Mux92.IN6
icon[2] => Mux93.IN6
icon[2] => Mux94.IN6
icon[2] => Mux95.IN6
icon[2] => Mux96.IN6
icon[2] => Mux97.IN6
icon[2] => Mux98.IN6
icon[2] => Mux99.IN6
icon[2] => Mux100.IN6
icon[2] => Mux101.IN6
icon[2] => Mux102.IN6
icon[2] => Mux103.IN6
icon[2] => Mux104.IN6
icon[2] => Mux105.IN6
icon[2] => Mux106.IN6
icon[2] => Mux107.IN6
icon[2] => Mux108.IN6
icon[2] => Mux109.IN3
icon[2] => Mux110.IN6
icon[2] => Mux111.IN6
icon[2] => Mux112.IN6
icon[2] => Mux113.IN6
icon[2] => Mux114.IN6
icon[2] => Mux115.IN6
icon[2] => Mux116.IN6
icon[2] => Mux117.IN6
icon[2] => Mux118.IN6
icon[2] => Mux119.IN6
icon[2] => Mux120.IN6
icon[2] => Mux121.IN6
mosi <= spi_master:spi.mosi
sclk <= spi_master:spi.sclk
ce <= spi_master:spi.ce
dc <= spi_master:spi.dc
lcd_rst <= spi_master:spi.lcd_rst


|tamagotchi|FSM_pet:pet_display|spi_master:spi
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => mosi~reg0.CLK
clk => dc~reg0.CLK
clk => avail~reg0.CLK
clk => busy~reg0.CLK
clk => active.CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
clk => clk_count[8].CLK
clk => clk_count[9].CLK
clk => clk_count[10].CLK
clk => clk_count[11].CLK
clk => clk_count[12].CLK
clk => clk_count[13].CLK
clk => clk_count[14].CLK
clk => clk_count[15].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => ce~reg0.CLK
clk => sclk~reg0.CLK
clk => lcd_rst~reg0.CLK
reset => avail~reg0.ACLR
reset => busy~reg0.ACLR
reset => active.ACLR
reset => clk_count[0].ACLR
reset => clk_count[1].ACLR
reset => clk_count[2].ACLR
reset => clk_count[3].ACLR
reset => clk_count[4].ACLR
reset => clk_count[5].ACLR
reset => clk_count[6].ACLR
reset => clk_count[7].ACLR
reset => clk_count[8].ACLR
reset => clk_count[9].ACLR
reset => clk_count[10].ACLR
reset => clk_count[11].ACLR
reset => clk_count[12].ACLR
reset => clk_count[13].ACLR
reset => clk_count[14].ACLR
reset => clk_count[15].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => shift_reg[6].ACLR
reset => shift_reg[7].ACLR
reset => ce~reg0.PRESET
reset => sclk~reg0.ACLR
reset => lcd_rst~reg0.ACLR
reset => data_out[0]~reg0.ENA
reset => dc~reg0.ENA
reset => mosi~reg0.ENA
reset => data_out[7]~reg0.ENA
reset => data_out[6]~reg0.ENA
reset => data_out[5]~reg0.ENA
reset => data_out[4]~reg0.ENA
reset => data_out[3]~reg0.ENA
reset => data_out[2]~reg0.ENA
reset => data_out[1]~reg0.ENA
data_in[0] => shift_reg.DATAB
data_in[1] => shift_reg.DATAB
data_in[2] => shift_reg.DATAB
data_in[3] => shift_reg.DATAB
data_in[4] => shift_reg.DATAB
data_in[5] => shift_reg.DATAB
data_in[6] => shift_reg.DATAB
data_in[7] => shift_reg.DATAB
start => always0.IN1
div_factor[0] => Add0.IN32
div_factor[1] => Add0.IN31
div_factor[2] => Add0.IN30
div_factor[3] => Add0.IN29
div_factor[4] => Add0.IN28
div_factor[5] => Add0.IN27
div_factor[6] => Add0.IN26
div_factor[7] => Add0.IN25
div_factor[8] => Add0.IN24
div_factor[9] => Add0.IN23
div_factor[10] => Add0.IN22
div_factor[11] => Add0.IN21
div_factor[12] => Add0.IN20
div_factor[13] => Add0.IN19
div_factor[14] => Add0.IN18
div_factor[15] => Add0.IN17
miso => shift_reg.DATAB
cmd => dc.DATAB
mosi <= mosi~reg0.DB_MAX_OUTPUT_PORT_TYPE
sclk <= sclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
ce <= ce~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
avail <= avail~reg0.DB_MAX_OUTPUT_PORT_TYPE
dc <= dc~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rst <= lcd_rst~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|display_hex:seg_display
num[0] => Mux4.IN7
num[1] => Mux3.IN7
num[2] => Mux2.IN7
num[3] => Mux1.IN7
num[4] => Mux0.IN7
num[5] => Mux4.IN6
num[6] => Mux3.IN6
num[7] => Mux2.IN6
num[8] => Mux1.IN6
num[9] => Mux0.IN6
num[10] => Mux4.IN5
num[11] => Mux3.IN5
num[12] => Mux2.IN5
num[13] => Mux1.IN5
num[14] => Mux0.IN5
num[15] => Mux4.IN4
num[16] => Mux3.IN4
num[17] => Mux2.IN4
num[18] => Mux1.IN4
num[19] => Mux0.IN4
num[20] => Mux4.IN3
num[21] => Mux3.IN3
num[22] => Mux2.IN3
num[23] => Mux1.IN3
num[24] => Mux0.IN3
num[25] => Mux4.IN2
num[26] => Mux3.IN2
num[27] => Mux2.IN2
num[28] => Mux1.IN2
num[29] => Mux0.IN2
num[30] => Mux4.IN1
num[31] => Mux3.IN1
num[32] => Mux2.IN1
num[33] => Mux1.IN1
num[34] => Mux0.IN1
num[35] => Mux4.IN0
num[36] => Mux3.IN0
num[37] => Mux2.IN0
num[38] => Mux1.IN0
num[39] => Mux0.IN0
clk => cfreq[0].CLK
clk => cfreq[1].CLK
clk => cfreq[2].CLK
clk => cfreq[3].CLK
clk => cfreq[4].CLK
clk => cfreq[5].CLK
clk => cfreq[6].CLK
clk => cfreq[7].CLK
clk => cfreq[8].CLK
clk => cfreq[9].CLK
clk => cfreq[10].CLK
clk => cfreq[11].CLK
clk => cfreq[12].CLK
clk => cfreq[13].CLK
clk => cfreq[14].CLK
clk => cfreq[15].CLK
clk => cfreq[16].CLK
clk => cfreq[17].CLK
clk => cfreq[18].CLK
clk => cfreq[19].CLK
clk => cfreq[20].CLK
clk => cfreq[21].CLK
clk => cfreq[22].CLK
clk => cfreq[23].CLK
clk => cfreq[24].CLK
clk => cfreq[25].CLK
clk => cfreq[26].CLK
sseg[6] <= BCDtoSSeg:bcdtosseg.SSeg[6]
sseg[5] <= BCDtoSSeg:bcdtosseg.SSeg[5]
sseg[4] <= BCDtoSSeg:bcdtosseg.SSeg[4]
sseg[3] <= BCDtoSSeg:bcdtosseg.SSeg[3]
sseg[2] <= BCDtoSSeg:bcdtosseg.SSeg[2]
sseg[1] <= BCDtoSSeg:bcdtosseg.SSeg[1]
sseg[0] <= BCDtoSSeg:bcdtosseg.SSeg[0]
an[0] <= an[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[1] <= an[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[2] <= an[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[3] <= an[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[4] <= an[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[5] <= an[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[6] <= an[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
an[7] <= an[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst => cfreq[0].ACLR
rst => cfreq[1].ACLR
rst => cfreq[2].ACLR
rst => cfreq[3].ACLR
rst => cfreq[4].ACLR
rst => cfreq[5].ACLR
rst => cfreq[6].ACLR
rst => cfreq[7].ACLR
rst => cfreq[8].ACLR
rst => cfreq[9].ACLR
rst => cfreq[10].ACLR
rst => cfreq[11].ACLR
rst => cfreq[12].ACLR
rst => cfreq[13].ACLR
rst => cfreq[14].ACLR
rst => cfreq[15].ACLR
rst => cfreq[16].ACLR
rst => cfreq[17].ACLR
rst => cfreq[18].ACLR
rst => cfreq[19].ACLR
rst => cfreq[20].ACLR
rst => cfreq[21].ACLR
rst => cfreq[22].ACLR
rst => cfreq[23].ACLR
rst => cfreq[24].ACLR
rst => cfreq[25].ACLR
rst => cfreq[26].ACLR
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => count.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => an.OUTPUTSELECT
rst => bcd[2].ENA
rst => bcd[1].ENA
rst => bcd[0].ENA
rst => bcd[3].ENA
rst => bcd[4].ENA


|tamagotchi|display_hex:seg_display|BCDtoSSeg:bcdtosseg
BCD[0] => Decoder0.IN4
BCD[1] => Decoder0.IN3
BCD[2] => Decoder0.IN2
BCD[3] => Decoder0.IN1
BCD[4] => Decoder0.IN0
SSeg[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
SSeg[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
SSeg[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SSeg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SSeg[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
SSeg[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
SSeg[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|tamagotchi|buzzer:buzzer_inst
clk => buzzer_out~reg0.CLK
clk => active.CLK
clk => trigger_prev.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
reset => buzzer_out~reg0.PRESET
reset => active.ACLR
reset => trigger_prev.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => counter[16].ACLR
reset => counter[17].ACLR
reset => counter[18].ACLR
reset => counter[19].ACLR
reset => counter[20].ACLR
reset => counter[21].ACLR
reset => counter[22].ACLR
reset => counter[23].ACLR
reset => counter[24].ACLR
reset => counter[25].ACLR
reset => counter[26].ACLR
reset => counter[27].ACLR
reset => counter[28].ACLR
reset => counter[29].ACLR
reset => counter[30].ACLR
reset => counter[31].ACLR
trigger => trigger_posedge.IN1
trigger => trigger_prev.DATAIN
buzzer_out <= buzzer_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


