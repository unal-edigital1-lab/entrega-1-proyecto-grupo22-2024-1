|gyro_test
clk => clk.IN3
reset_n => reset_n.IN3
sda <> sda
scl <> scl
led_sign <= compare:comparator.led_sign


|gyro_test|MPU6050:mpu6050_ctrl
clk => completed~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => load~reg0.CLK
clk => address_internal[0].CLK
clk => address_internal[1].CLK
clk => address_internal[2].CLK
clk => address_internal[3].CLK
clk => write_enable~reg0.CLK
clk => read_enable~reg0.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => sync_reset~reg0.CLK
clk => state~7.DATAIN
reset_n => completed~reg0.ACLR
reset_n => data[0]~reg0.PRESET
reset_n => data[1]~reg0.PRESET
reset_n => data[2]~reg0.PRESET
reset_n => data[3]~reg0.PRESET
reset_n => data[4]~reg0.PRESET
reset_n => data[5]~reg0.PRESET
reset_n => data[6]~reg0.PRESET
reset_n => data[7]~reg0.PRESET
reset_n => load~reg0.ACLR
reset_n => address_internal[0].ACLR
reset_n => address_internal[1].ACLR
reset_n => address_internal[2].ACLR
reset_n => address_internal[3].ACLR
reset_n => write_enable~reg0.ACLR
reset_n => read_enable~reg0.ACLR
reset_n => data_out[0]~reg0.ACLR
reset_n => data_out[1]~reg0.ACLR
reset_n => data_out[2]~reg0.ACLR
reset_n => data_out[3]~reg0.ACLR
reset_n => data_out[4]~reg0.ACLR
reset_n => data_out[5]~reg0.ACLR
reset_n => data_out[6]~reg0.ACLR
reset_n => data_out[7]~reg0.ACLR
reset_n => sync_reset~reg0.ACLR
reset_n => state~9.DATAIN
tic => sync_reset.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => read_enable.OUTPUTSELECT
tic => write_enable.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => load.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => completed.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => write_enable.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => write_enable.OUTPUTSELECT
tic => read_enable.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => write_enable.OUTPUTSELECT
tic => read_enable.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => load.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => load.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => data.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => address_internal.OUTPUTSELECT
tic => write_enable.OUTPUTSELECT
tic => read_enable.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
sync_reset <= sync_reset~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_enable <= read_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable <= write_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => data_out.OUTPUTSELECT
queued => write_enable.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => load.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => data.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => address_internal.OUTPUTSELECT
queued => read_enable.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => state.OUTPUTSELECT
queued => load.OUTPUTSELECT
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
queued => data_out.DATAB
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
nack => state.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => data_out.OUTPUTSELECT
stop => write_enable.OUTPUTSELECT
stop => read_enable.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => address_internal.OUTPUTSELECT
stop => load.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => data.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => state.OUTPUTSELECT
stop => load.OUTPUTSELECT
data_valid => load.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => data.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => load.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => address_internal.OUTPUTSELECT
data_valid => write_enable.OUTPUTSELECT
data_valid => read_enable.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_valid => state.OUTPUTSELECT
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
address[0] <= address_internal[0].DB_MAX_OUTPUT_PORT_TYPE
address[1] <= address_internal[1].DB_MAX_OUTPUT_PORT_TYPE
address[2] <= address_internal[2].DB_MAX_OUTPUT_PORT_TYPE
address[3] <= address_internal[3].DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
load <= load~reg0.DB_MAX_OUTPUT_PORT_TYPE
completed <= completed~reg0.DB_MAX_OUTPUT_PORT_TYPE
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT
rescan => state.OUTPUTSELECT


|gyro_test|i2c_master:i2c_master
clk => stop~reg0.CLK
clk => shift[0].CLK
clk => shift[1].CLK
clk => shift[2].CLK
clk => shift[3].CLK
clk => shift[4].CLK
clk => shift[5].CLK
clk => shift[6].CLK
clk => shift[7].CLK
clk => nack_detected.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_valid~reg0.CLK
clk => queued~reg0.CLK
clk => nack~reg0.CLK
clk => sda_out~reg0.CLK
clk => scl_out~reg0.CLK
clk => status[0]~reg0.CLK
clk => status[1]~reg0.CLK
clk => status[2]~reg0.CLK
clk => sda_in_qq.CLK
clk => sda_in_q.CLK
clk => next_state~3.DATAIN
clk => state~20.DATAIN
reset_n => next_state.S_READ.OUTPUTSELECT
reset_n => next_state.S_WRITE.OUTPUTSELECT
reset_n => stop~reg0.ACLR
reset_n => shift[0].ACLR
reset_n => shift[1].ACLR
reset_n => shift[2].ACLR
reset_n => shift[3].ACLR
reset_n => shift[4].ACLR
reset_n => shift[5].ACLR
reset_n => shift[6].ACLR
reset_n => shift[7].ACLR
reset_n => nack_detected.ACLR
reset_n => counter[0].ACLR
reset_n => counter[1].ACLR
reset_n => counter[2].ACLR
reset_n => counter[3].ACLR
reset_n => data_out[0]~reg0.ACLR
reset_n => data_out[1]~reg0.ACLR
reset_n => data_out[2]~reg0.ACLR
reset_n => data_out[3]~reg0.ACLR
reset_n => data_out[4]~reg0.ACLR
reset_n => data_out[5]~reg0.ACLR
reset_n => data_out[6]~reg0.ACLR
reset_n => data_out[7]~reg0.ACLR
reset_n => data_valid~reg0.ACLR
reset_n => queued~reg0.ACLR
reset_n => nack~reg0.ACLR
reset_n => sda_out~reg0.PRESET
reset_n => scl_out~reg0.PRESET
reset_n => status[0]~reg0.ACLR
reset_n => status[1]~reg0.ACLR
reset_n => status[2]~reg0.ACLR
reset_n => sda_in_qq.PRESET
reset_n => sda_in_q.PRESET
reset_n => state~22.DATAIN
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => state.OUTPUTSELECT
sync_reset => next_state.OUTPUTSELECT
sync_reset => next_state.OUTPUTSELECT
sync_reset => status[2]~reg0.ENA
sync_reset => status[1]~reg0.ENA
sync_reset => status[0]~reg0.ENA
sync_reset => scl_out~reg0.ENA
sync_reset => sda_out~reg0.ENA
sync_reset => nack~reg0.ENA
sync_reset => queued~reg0.ENA
sync_reset => data_valid~reg0.ENA
sync_reset => data_out[7]~reg0.ENA
sync_reset => data_out[6]~reg0.ENA
sync_reset => data_out[5]~reg0.ENA
sync_reset => data_out[4]~reg0.ENA
sync_reset => data_out[3]~reg0.ENA
sync_reset => data_out[2]~reg0.ENA
sync_reset => data_out[1]~reg0.ENA
sync_reset => data_out[0]~reg0.ENA
sync_reset => counter[3].ENA
sync_reset => counter[2].ENA
sync_reset => counter[1].ENA
sync_reset => counter[0].ENA
sync_reset => nack_detected.ENA
sync_reset => shift[7].ENA
sync_reset => shift[6].ENA
sync_reset => shift[5].ENA
sync_reset => shift[4].ENA
sync_reset => shift[3].ENA
sync_reset => shift[2].ENA
sync_reset => shift[1].ENA
sync_reset => shift[0].ENA
sync_reset => stop~reg0.ENA
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => next_state.OUTPUTSELECT
tic => next_state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => scl_out.OUTPUTSELECT
tic => sda_out.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => counter.OUTPUTSELECT
tic => nack.OUTPUTSELECT
tic => queued.OUTPUTSELECT
tic => stop.OUTPUTSELECT
tic => data_valid.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => scl_out.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => sda_out.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => nack_detected.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => nack_detected.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => sda_out.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => status.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => shift.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => sda_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_out.OUTPUTSELECT
tic => data_valid.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => stop.OUTPUTSELECT
tic => state.OUTPUTSELECT
tic => Selector3.IN1
data_in[0] => shift.DATAB
data_in[1] => shift.DATAB
data_in[2] => shift.DATAB
data_in[3] => shift.DATAB
data_in[4] => shift.DATAB
data_in[5] => shift.DATAB
data_in[6] => shift.DATAB
data_in[7] => shift.DATAB
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
read_enable => always2.IN0
read_enable => sda_out.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => shift.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => counter.OUTPUTSELECT
read_enable => queued.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => state.OUTPUTSELECT
read_enable => scl_out.OUTPUTSELECT
read_enable => sda_out.OUTPUTSELECT
read_enable => sda_out.DATAB
write_enable => always2.IN1
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => shift.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => counter.OUTPUTSELECT
write_enable => queued.OUTPUTSELECT
write_enable => data_valid.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => scl_out.OUTPUTSELECT
write_enable => sda_out.OUTPUTSELECT
write_enable => sda_out.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => state.OUTPUTSELECT
write_enable => next_state.DATAB
write_enable => next_state.DATAB
write_enable => shift.DATAB
nack <= nack~reg0.DB_MAX_OUTPUT_PORT_TYPE
queued <= queued~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop <= stop~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[0] <= status[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[1] <= status[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
status[2] <= status[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl_in => ~NO_FANOUT~
scl_out <= scl_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda_in => sda_in_q.DATAIN
sda_out <= sda_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|gyro_test|compare:comparator
clk => rescan~reg0.CLK
clk => led_sign~reg0.CLK
reset_n => rescan~reg0.ACLR
reset_n => led_sign~reg0.PRESET
tic => rescan~reg0.ENA
tic => led_sign~reg0.ENA
completed => led_sign.OUTPUTSELECT
completed => rescan~reg0.DATAIN
rescan <= rescan~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_reg[0] => x_magnitude[0].DATAA
x_reg[0] => Add0.IN15
x_reg[1] => x_magnitude[1].DATAA
x_reg[1] => Add0.IN14
x_reg[2] => x_magnitude[2].DATAA
x_reg[2] => Add0.IN13
x_reg[3] => x_magnitude[3].DATAA
x_reg[3] => Add0.IN12
x_reg[4] => x_magnitude[4].DATAA
x_reg[4] => Add0.IN11
x_reg[5] => x_magnitude[5].DATAA
x_reg[5] => Add0.IN10
x_reg[6] => x_magnitude[6].DATAA
x_reg[6] => Add0.IN9
x_reg[7] => x_magnitude[7].OUTPUTSELECT
x_reg[7] => x_magnitude[6].OUTPUTSELECT
x_reg[7] => x_magnitude[5].OUTPUTSELECT
x_reg[7] => x_magnitude[4].OUTPUTSELECT
x_reg[7] => x_magnitude[3].OUTPUTSELECT
x_reg[7] => x_magnitude[2].OUTPUTSELECT
x_reg[7] => x_magnitude[1].OUTPUTSELECT
x_reg[7] => x_magnitude[0].OUTPUTSELECT
x_reg[7] => led_sign.DATAB
x_reg[7] => Add0.IN16
led_sign <= led_sign~reg0.DB_MAX_OUTPUT_PORT_TYPE


